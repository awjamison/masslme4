% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/masslmer.R
\name{masslmer}
\alias{masslmer}
\title{Fit lme4 \code{lmer} Models in Parallel}
\usage{
masslmer(formula, data, indexVars, addedData = NULL, dropUnusedData = FALSE,
  saveTo = NULL, start = NULL, nStarters = NULL, multiprocessing = TRUE,
  maxProcesses = NULL, logging = NULL, ...)
}
\arguments{
\item{formula}{same as \code{\link[lme4]{lmer}} \code{formula}.}

\item{data}{same as \code{\link[lme4]{lmer}} \code{data}.}

\item{indexVars}{character: fixed effects factors that partition the data
into logically related subsets. Unique combinations of the levels will be
used to split the data, and the subsets will be processed in parallel.}

\item{addedData}{NULL | data frame: variables to combine with the data.
\code{data} and \code{addedData} must have at least one variable in common,
and will be merged using all shared variables. Merging is done on the data
subsets (not \code{data} itself) at the time they are sent to worker
processes. In repeated measures designs, this may reduce the memory
footprint from having to store all variables in a single data frame
\code{data}.}

\item{dropUnusedData}{logical: whether to drop rows in \code{data} that
don't have an entry in \code{addedData}.}

\item{saveTo}{character: path to save the results.}

\item{start}{same as \code{\link[lme4]{lmer}} \code{start}.}

\item{nStarters}{integer: number of models to fit in order to get starting
theta values.}

\item{multiprocessing}{logical: whether to parallelize fitting models.}

\item{maxProcesses}{integer: maximum number of worker processes to create.
Defaults to the number of CPUs on the host machine.}

\item{logging}{NULL | <file_path> | 'console': whether to generate logs,
and if so whether to send the output to the console or save it in a file.}

\item{...}{other potential arguments passed to \code{\link[masslmer]{lmer2}}.}
}
\value{
data frame containing statistics for each of the index variables.
  Currently, only the beta value, standard error, and t-value are reported,
  but a future version will allow customizing the output.
}
\description{
The intended use is to support mass-univarate analysis (frequently used in
neuroimaging research) of a large dataset, although other applications
are possible. A model is iteratively fit to logically related subsets of
the data (e.g. voxels, sensors) and the combined statistics of each dataset
are reported. Subsets are determined by index variables ('indexVars'):
factors whose levels will be used to split the data.
}
\examples{
## create a model:
# people as random intercepts, conditions as fixed effects
# fit model separately for different sensors and times
# sensor s_k1 ~ N(k1, 1) for k1 = 1,2,3
# time t_k2 ~ N(k2, 1) for k2 = 1,2
# condition x1 = s*t, x2 = 2*x1
# Y_ij = B0 + B1*x_ij + u_j + e_ij for (B0 + u_j) = -2,-1,,0,1,2

## create some fake data
# five people, two conditions, two sensors, three times
data <- sapply(1:5, function(p) {
  p + sapply(1:2, function(x) {
  x * sapply(1:2, function(s) {
  rnorm(50, s) * sapply(1:3, function(t) {
  rnorm(50, t)})})})})

data <- data.frame(y = sapply(data, c),
                   p = rep(c("A","B","C","D","E"), each = 600),
                   x = rep(c("A","B"), each = 300),
                   s = rep(c(1,2), each = 150),
                   t = rep(c(1,2,3), each = 50))

## fit models in parallel with two worker processes
# p is a random effect, x is a fixed effect, and s and t are index variables
model <- "y ~ x + (1 | p)"
results <- masslmer(model, data, c("s", "t"), maxProcesses = 2)
}

